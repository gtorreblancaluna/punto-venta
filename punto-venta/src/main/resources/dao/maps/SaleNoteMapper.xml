<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mx.com.proyect.puntoventa.web.dao.SaleNoteDAO">

	<resultMap id="resultMapQueryItemsSold" type="resultQueryItemsSold">
		<result property="total" column="total_articulos" />
		<result property="itemId" column="cl_articulo" />
		<result property="description" column="descripcion" />
		<result property="itemPrice" column="precio_articulo" />		
	</resultMap>

	<resultMap id="resultMapQuerySaleNote" type="resultQuerySaleNote">
		<result property="saleId" column="cl_venta" />
		<result property="saleDate" column="fe_registro" />
		<result property="dateDelivery" column="fe_entrega" />
		<result property="fechaVencimientoCredito" column="fe_vencimiento_credito" />
		<result property="description" column="ds_descripcion" />
		<result property="nameCustomer" column="nombre_cliente" />
		<result property="nameOffice" column="nombre_sucursal" />
		<result property="nameUser" column="nombre_usuario" />
		
		<result property="status.statusId" column="cl_estatus_venta" />
		<result property="status.description" column="descripcion_estatus_venta" />
	</resultMap>

	<resultMap id="resultMapSaleNoteDetail" type="saleDetailDTO">
		<result property="saleDetailId" column="cl_detalle_venta" />
		<result property="saleId" column="cl_venta" />
		<result property="item.itemId" column="cl_articulo" />
		<result property="color.colorId" column="cl_color" />
		<result property="color.description" column="descripcion_color" />
		<result property="item.description" column="descripcion_articulo" />
		<result property="item.unitMeasurement" column="unidad_medida_articulo" />
		<result property="item.salePrice" column="precio_venta_articulo" />
		<result property="item.stock" column="stock_articulo" />
		<result property="item.amountEntry" column="cantidad_entrada" />
		<result property="amount" column="cantidad" />
	</resultMap>

	<resultMap id="resultMapSaleNote" type="saleNoteForm">
		<result property="saleId" column="cl_venta" />
		<result property="dateTimestamp" column="fe_registro" />
		<result property="dateDelivery" column="fe_entrega" />
		<result property="userId" column="cl_cliente" />
		<result property="sellerId" column="cl_usuario" />
		<result property="storeId" column="cl_sucursal" />
		<result property="description" column="ds_descripcion" />	
		
		<result property="status.statusId" column="cl_estatus_venta" />
		<result property="status.description" column="descripcion_estatus" />
		
		<!-- Datos del cliente -->
		<result property="customer.userId" column="cl_cliente" />
		<result property="customer.name" column="nombre" />
		<result property="customer.firstName" column="ap_paterno" />
		<result property="customer.secondName" column="ap_materno" />
		<result property="customer.tel1" column="tel1" />
		<result property="customer.tel2" column="tel2" />	
		<result property="customer.adress" column="direccion" />
		
	</resultMap>

	<resultMap id="resultMapSaleNoteDto" type="saleNoteDTO">
		<result property="saleId" column="cl_venta" />
		<result property="registerDate" column="fe_registro" />
		<result property="deliveryDate" column="fe_entrega" />
		<result property="client.userId" column="cl_cliente" />
		<result property="client.name" column="nombre_cliente" />
		<result property="client.firstName" column="ap_paterno_cliente" />
		<result property="client.secondName" column="ap_materno_cliente" />
		<result property="client.adress" column="direccion_cliente" />
		<result property="account.userId" column="cl_usuario" />
		<result property="account.name" column="nombre_usuario" />
		<result property="account.firstName" column="ap_paterno_usuario" />
		<result property="account.secondName" column="ap_materno_usuario" />
		<result property="store.storeId" column="cl_sucursal" />
		<result property="store.description" column="nombre_sucursal" />
		<result property="description" column="ds_descripcion" />
<!-- 		estatus de venta -->
		<result property="status.statusId" column="cl_estatus_venta" />
		<result property="status.description" column="descripcion_estatus" />
	</resultMap>
	
	<resultMap id="resultMapSaleStatus" type="saleStatusDTO">
		<result property="statusId" column="cl_estatus_venta" />
		<result property="description" column="ds_descripcion" />				
	</resultMap>
	
	<resultMap id="resultMapTipoAbono" type="tipoAbonoDTO">
		<result property="tipoAbonoId" column="cl_tipo_abono" />
		<result property="descripcion" column="ds_descripcion" />	
		<result property="estado" column="fg_estatus" />				
	</resultMap>
	
	<resultMap id="resultMapAbonos" type="abonoDTO">
		<result property="abonoId" column="cl_abono" />
		<result property="saleNote.saleId" column="cl_venta" />	
		<result property="tipoAbono.tipoAbonoId" column="cl_tipo_abono" />	
		<result property="tipoAbono.descripcion" column="descripcion_abono" />	
		<result property="cantidadAbono" column="cantidad_abono" />	
		<result property="descripcion" column="ds_descripcion" />	
		<result property="feRegistro" column="fecha_registro" />	
		<!-- Datos del usuario que agrego el abono -->
		<result property="usuario.userId" column="cl_usuario" />	
		<result property="usuario.name" column="nombre_usuario" />
		<result property="usuario.firstName" column="ap_paterno_usuario" />	
		<result property="usuario.secondName" column="ap_materno_usuario" />
					
	</resultMap>

	<insert id="addSaleNote" parameterType="saleNoteForm">
		<selectKey resultType="java.lang.Integer" keyProperty="saleId" order="AFTER">
			SELECT LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO c_venta
		(
			cl_cliente,
			cl_usuario,
			cl_sucursal,
			fe_entrega,
			cl_estatus_venta,
			<if test="credit != null and credit != '' ">
				fg_credito,
			</if>
			<if test="fechaVencimientoCredito != null and fechaVencimientoCredito != ''  ">
				fe_vencimiento_credito,
			</if>
			ds_descripcion
		)
		VALUES
		(
			#{userId},
			#{sellerId},	
			#{storeId},
			#{dateTimestamp},
			#{status.statusId},
			<if test="credit != null and credit != '' ">
				#{credit},
			</if>
			<if test="fechaVencimientoCredito != null and fechaVencimientoCredito != ''  ">
				#{fechaVencimientoCredito},
			</if>
			#{description})
	</insert>

	<insert id="addSaleNoteDetails" parameterType="java.util.Map">
		INSERT INTO
		k_detalle_venta (cl_venta,cl_articulo,cl_color,cantidad,precio_articulo)
		VALUES
		(#{saleId},#{itemId},#{colorId},#{amount},#{itemSalePrice})
	</insert>
	
	<select id="getSaleNoteByFilter" parameterType="saleNoteFilter"	resultMap="resultMapQuerySaleNote">
		SELECT v.cl_venta,v.fe_registro,v.fe_entrega,v.ds_descripcion,v.fe_vencimiento_credito,
		CONCAT(c.nombre,' ',c.ap_paterno) AS nombre_cliente, s.nombre AS nombre_sucursal,
		CONCAT(u.nombre,' ',u.ap_paterno) AS nombre_usuario,
		estatus.ds_descripcion AS descripcion_estatus_venta	
		FROM c_venta v
		INNER JOIN c_cliente c ON (v.cl_cliente = c.cl_cliente)
		INNER JOIN c_sucursal s ON (v.cl_sucursal = s.cl_sucursal)
		INNER JOIN c_usuario u ON (v.cl_usuario = u.cl_usuario)
		INNER JOIN c_estatus_venta estatus ON (v.cl_estatus_venta = estatus.cl_estatus_venta)
		<where>
			<if	test="iniDateFilter != null and endDateFilter != null and iniDateFilter != '' and endDateFilter != '' ">
				<![CDATA[ 
					AND v.fe_registro >= CONCAT(#{iniDateFilter},' 000000') AND v.fe_registro <= CONCAT(#{endDateFilter},' 235959')
				]]>
				<!-- AND (v.fe_entrega BETWEEN STR_TO_DATE(#{iniDateFilter},'%Y/%m/%d') 
					AND STR_TO_DATE(CONCAT(#{endDateFilter}, ' 235959'),'%Y/%m/%d %H%i%s') ) -->
			</if>
			<if test="descriptionFilter != null and descriptionFilter != '' ">
				AND v.ds_descripcion LIKE
				CONCAT('%',#{descriptionFilter},'%')
			</if>
			<if test="officeIdFilter != null and officeIdFilter != 0 ">
				AND v.cl_sucursal IN (#{officeIdFilter})
			</if>
			<if test="customerNameFilter != null and customerNameFilter != '' ">
				AND CONCAT(c.nombre,' ',c.ap_paterno) LIKE CONCAT('%',#{customerNameFilter},'%')
			</if>
			<if test="statusFilter != null and statusFilter != 0 ">
				AND v.cl_estatus_venta = (#{statusFilter})
			</if>
			<if test="saleIdFilter != null and saleIdFilter != '' ">
				AND v.cl_venta = (#{saleIdFilter})
			</if>
			<if test="credit != null and credit != ''  ">
				AND v.fg_credito = #{credit}
			</if>
		</where>
		ORDER BY v.cl_venta DESC
	</select>

	<select id="getSaleNoteById" parameterType="java.lang.Integer" resultMap="resultMapSaleNote">
		SELECT venta.*, estatus.ds_descripcion AS descripcion_estatus
		FROM c_venta venta
		INNER JOIN c_estatus_venta estatus ON (venta.cl_estatus_venta = estatus.cl_estatus_venta)
		INNER JOIN c_cliente cliente ON (venta.cl_cliente = cliente.cl_cliente)
		WHERE cl_venta = #{id}
	</select>

	<select id="getDetailSaleNoteById" parameterType="java.lang.Integer"	resultMap="resultMapSaleNoteDetail">
		SELECT dv.*, c.ds_descripcion AS descripcion_color,
		a.descripcion AS descripcion_articulo, a.unidad_medida AS
		unidad_medida_articulo, dv.precio_articulo AS precio_venta_articulo,
		a.cantidad_existente AS stock_articulo,
		dv.cantidad AS cantidad_vendida
		FROM k_detalle_venta dv
		INNER JOIN c_articulo a ON (dv.cl_articulo = a.cl_articulo)
		INNER JOIN c_color c ON (dv.cl_color = c.cl_color)
		WHERE dv.cl_venta = #{id}
	</select>
	
	<update id="updateSaleNote" parameterType="saleNoteForm">
		UPDATE c_venta SET
		fe_entrega = #{dateSaleNote},
		cl_cliente = #{userId},
		cl_usuario = #{sellerId},
		cl_sucursal = #{storeId},
		ds_descripcion = #{description}
		WHERE cl_venta = #{saleId}
	</update>

	<delete id="removeDetailSaleNote" parameterType="java.lang.Integer">
		DELETE FROM	k_detalle_venta WHERE cl_venta = #{saleId}
	</delete>

	<select id="getSaleById" resultMap="resultMapSaleNoteDto">
		SELECT v.*, 
		c.nombre AS	nombre_cliente, 
		c.ap_paterno AS ap_paterno_cliente,
		c.ap_materno AS	ap_materno_cliente,
		c.direccion AS direccion_cliente,
		u.nombre AS nombre_usuario, 
		u.ap_paterno AS	ap_paterno_usuario, 
		u.ap_materno AS ap_materno_usuario,
		s.nombre AS	nombre_sucursal,
		status.ds_descripcion AS descripcion_estatus
		FROM c_venta v
		INNER JOIN c_cliente c ON (v.cl_cliente = c.cl_cliente)
		INNER JOIN c_usuario u ON (v.cl_usuario = u.cl_usuario)
		INNER JOIN c_sucursal s ON (v.cl_sucursal = s.cl_sucursal)
		INNER JOIN c_estatus_venta status ON (v.cl_estatus_venta = status.cl_estatus_venta)
		WHERE v.cl_venta = #{id}
	</select>
	<!-- obtener las ventas del dia -->
	<select id="getSalesToday" resultMap="resultMapQuerySaleNote" parameterType="java.lang.String">
		SELECT v.cl_venta,v.fe_registro,v.fe_entrega,v.ds_descripcion,
		CONCAT(c.nombre,' ',c.ap_paterno) AS nombre_cliente, s.nombre AS
		nombre_sucursal,
		CONCAT(u.nombre,' ',u.ap_paterno) AS nombre_usuario
		FROM c_venta v
		INNER JOIN c_cliente c ON (v.cl_cliente = c.cl_cliente)
		INNER JOIN c_sucursal s ON (v.cl_sucursal = s.cl_sucursal)
		INNER JOIN c_usuario u ON (v.cl_usuario = u.cl_usuario)
		WHERE DATE(v.fe_entrega) = #{today}
	</select>
	<!-- obtener las ventas de la semana -->
	<select id="getSalesWeek" resultMap="resultMapQuerySaleNote">
		SELECT v.cl_venta,v.fe_registro,v.fe_entrega,v.ds_descripcion,
		CONCAT(c.nombre,' ',c.ap_paterno) AS nombre_cliente, s.nombre AS
		nombre_sucursal,
		CONCAT(u.nombre,' ',u.ap_paterno) AS nombre_usuario
		FROM c_venta v
		INNER JOIN c_cliente c ON (v.cl_cliente = c.cl_cliente)
		INNER JOIN c_sucursal s ON (v.cl_sucursal = s.cl_sucursal)
		INNER JOIN c_usuario u ON (v.cl_usuario = u.cl_usuario)
		WHERE YEARWEEK(v.fe_entrega) = YEARWEEK(CURDATE())
		AND v.cl_estatus_venta = 5
	</select>
	<!-- obtener las ventas del mes -->
	<select id="getSalesMonth" resultMap="resultMapQuerySaleNote" parameterType="java.util.Map">
		SELECT v.cl_venta,v.fe_registro,v.fe_entrega,v.ds_descripcion,
		CONCAT(c.nombre,' ',c.ap_paterno) AS nombre_cliente, s.nombre AS
		nombre_sucursal,
		CONCAT(u.nombre,' ',u.ap_paterno) AS nombre_usuario
		FROM c_venta v
		INNER JOIN c_cliente c ON (v.cl_cliente = c.cl_cliente)
		INNER JOIN c_sucursal s ON (v.cl_sucursal = s.cl_sucursal)
		INNER JOIN c_usuario u ON (v.cl_usuario = u.cl_usuario)
		WHERE MONTH(v.fe_entrega) = #{month} AND YEAR(v.fe_entrega) = #{year}
		AND v.cl_estatus_venta = 5
	</select>
	<!-- obtener los articulos vendidos en el dia  -->
	<select id="getItemsByDay" resultMap="resultMapQueryItemsSold" parameterType="java.lang.String">
		SELECT COUNT(a.cl_articulo) AS total_articulos, a.cl_articulo, a.descripcion, dv.precio_articulo      	
		FROM k_detalle_venta dv
		INNER JOIN c_venta v ON (v.cl_venta = dv.cl_venta)
		INNER JOIN c_articulo a ON (a.cl_articulo = dv.cl_articulo)
		WHERE v.cl_estatus_venta = 5
		AND DATE(v.fe_entrega) = #{today}
		GROUP BY a.cl_articulo
	</select>
	<!-- obtener los articulos vendidos en la semana -->
	<select id="getItemsByWeek" resultMap="resultMapQueryItemsSold">
		SELECT COUNT(dv.cl_articulo) AS total_articulos, a.cl_articulo, a.descripcion, dv.precio_articulo
		FROM k_detalle_venta dv
		INNER JOIN c_venta v ON (v.cl_venta = dv.cl_venta)
		INNER JOIN c_articulo a ON (a.cl_articulo = dv.cl_articulo)
		WHERE v.cl_estatus_venta = 5
		AND YEARWEEK(v.fe_entrega) = YEARWEEK(CURDATE())
		GROUP BY dv.cl_articulo
	</select>
	<!-- obtener los articulos vendidos en el mes -->
	<select id="getItemsByMonth" resultMap="resultMapQueryItemsSold" parameterType="java.util.Map">
		SELECT COUNT(dv.cl_articulo) AS total_articulos, a.cl_articulo, a.descripcion, dv.precio_articulo
		FROM k_detalle_venta dv
		INNER JOIN c_venta v ON (v.cl_venta = dv.cl_venta)
		INNER JOIN c_articulo a ON (a.cl_articulo = dv.cl_articulo)
		WHERE v.cl_estatus_venta = 5
		AND MONTH(v.fe_entrega) = #{month} AND YEAR(v.fe_entrega) = #{year}
		GROUP BY dv.cl_articulo
	</select>
	<select id="getSalesStatus" resultMap="resultMapSaleStatus">
		SELECT * FROM c_estatus_venta ORDER BY ds_descripcion
	</select>
	
	<update id="changeStatusSaleNote" parameterType="java.util.Map">
		UPDATE c_venta SET cl_estatus_venta = #{statusId} WHERE cl_venta = #{saleId}
	</update>
	
	<select id="getTotalSaleById" parameterType="java.lang.Integer" resultType="java.lang.Float">
		SELECT SUM(cantidad * precio_articulo) FROM k_detalle_venta WHERE cl_venta = #{id}
	</select>
	
	<select id="obtenerTiposAbono" resultMap="resultMapTipoAbono" >
		SELECT * FROM c_tipo_abono WHERE fg_estatus = '1' ORDER BY ds_descripcion
	</select>
	
	<insert id="insertarAbono" parameterType="java.util.Map">
		INSERT INTO c_abono
		(
			cl_venta,
			cl_tipo_abono,
			cl_usuario,
			cantidad_abono,
			ds_descripcion
		)
		VALUES
		(
			#{ventaId},
			#{abono.tipoAbono.tipoAbonoId},
			#{abono.usuario.userId},
			#{abono.cantidadAbono},
			#{abono.descripcion}
		)
	</insert>
	
	<select id="obtenerAbonosPorVenta" parameterType="java.lang.Integer" resultMap="resultMapAbonos">
		SELECT abono.*,
		usuario.nombre AS nombre_usuario,
		usuario.ap_paterno AS ap_paterno_usuario,
		usuario.ap_materno AS ap_materno_usuario,
		tipo.ds_descripcion AS descripcion_abono
		FROM c_abono abono
		INNER JOIN c_usuario usuario ON (abono.cl_usuario = usuario.cl_usuario)
		INNER JOIN c_tipo_abono tipo ON (abono.cl_tipo_abono = tipo.cl_tipo_abono)
		WHERE abono.cl_venta = #{value} AND abono.fg_estatus = '1'
	</select>
	
	<insert id="agregarAbono" parameterType="abonoDTO">
		INSERT INTO c_abono
		(
			cl_venta,
			cl_tipo_abono,
			cl_usuario,
			cantidad_abono,
			ds_descripcion
		)
		VALUES
		(
			#{saleNote.saleId},
			#{tipoAbono.tipoAbonoId},
			#{usuario.userId},
			#{cantidadAbono},
			#{descripcion}
		)
	</insert>
	
	<update id="eliminarAbono" parameterType="java.lang.Integer">
		UPDATE c_abono SET fg_estatus = '0' WHERE cl_abono = #{abonoId}
	</update>
	
	<select id="obtenerAbonosPorFiltro" parameterType="filtroAbonos" resultMap="resultMapAbonos">		
		SELECT abono.*,
		usuario.nombre AS nombre_usuario,
		usuario.ap_paterno AS ap_paterno_usuario,
		usuario.ap_materno AS ap_materno_usuario,
		tipo.ds_descripcion AS descripcion_abono
		FROM c_abono abono
		INNER JOIN c_usuario usuario ON (abono.cl_usuario = usuario.cl_usuario)
		INNER JOIN c_tipo_abono tipo ON (abono.cl_tipo_abono = tipo.cl_tipo_abono)
		WHERE abono.fg_estatus = '1'
		<if	test="fechaInicial != null and fechaFinal != null and fechaInicial != '' and fechaFinal != '' ">
			<![CDATA[ 
				AND abono.fecha_registro >= CONCAT(#{fechaInicial},' 000000') AND v.fecha_registro <= CONCAT(#{fechaFinal},' 235959')
			]]>
		</if>	
		<if test="tipoAbonoId != null and tipoAbonoId != '' ">
			AND abono.cl_tipo_abono = #{tipoAbonoId}
		</if>		
	</select>

</mapper>