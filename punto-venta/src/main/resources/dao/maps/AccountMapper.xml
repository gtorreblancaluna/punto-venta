<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mx.com.proyect.puntoventa.web.dao.AccountDAO">

	<resultMap id="accountResultMap" type="accountDTO">
		<result property="userId" column="cl_usuario" />		
		<result property="name" column="nombre" />
		<result property="firstName" column="ap_paterno" />
		<result property="secondName" column="ap_materno" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="feAlta" column="fe_alta" />
		<result property="fgAdmin" column="fg_admin" />
		<result property="fgActivo" column="fg_activo" />
		<result property="job.jobId" column="puestoId" />
		<result property="job.description" column="descripcion_puesto" />
		<result property="office.officeId" column="cl_sucursal" />
		<result property="office.name" column="nombre_sucursal" />
	</resultMap>
	
	<resultMap id="resultMapJobs" type="jobDTO">
		<result property="jobId" column="cl_puesto" />		
		<result property="description" column="ds_descripcion" />
		<result property="status" column="fg_estatus" />		
	</resultMap>

	<select id="findByIdUser" resultMap="accountResultMap" parameterType="long">
		SELECT u.*, p.cl_puesto AS puestoId, p.ds_descripcion AS descripcion_puesto
		FROM c_usuario u
		INNER JOIN c_puesto p ON (u.cl_puesto = p.cl_puesto)		
		WHERE cl_usuario = #{id}
	</select>
	
	<select id="validateUser" resultMap="accountResultMap" parameterType="loginForm">
		SELECT u.*, p.cl_puesto AS puestoId, p.ds_descripcion AS descripcion_puesto,
		s.nombre AS nombre_sucursal
		FROM c_usuario u
		INNER JOIN c_puesto p ON (u.cl_puesto = p.cl_puesto)
		INNER JOIN c_sucursal s ON (u.cl_sucursal = s.cl_sucursal)
		WHERE u.email = #{email} AND u.password = #{password} 
		AND u.fg_activo = '1'
	</select>

	<select id="getAllUsers" resultMap="accountResultMap">
		SELECT u.*, p.cl_puesto AS puestoId, p.ds_descripcion AS descripcion_puesto,
		s.nombre AS nombre_sucursal
		FROM c_usuario u
		INNER JOIN c_puesto p ON (u.cl_puesto = p.cl_puesto)	
		INNER JOIN c_sucursal s ON (u.cl_sucursal = s.cl_sucursal)
		WHERE u.fg_activo = '1'
	</select>

	<insert id="insertUser" parameterType="accountDTO">
		INSERT INTO c_usuario
		(cl_puesto,nombre,ap_paterno,ap_materno,email,fe_alta,password,fg_admin,fg_activo,cl_sucursal)
		VALUES		
		(#{job.jobId},#{name},#{firstName},#{secondName},#{email},#{addDate},#{password},#{admin},"1",#{office.officeId})
	</insert>
	<update id="updateUser" parameterType="accountDTO">
		UPDATE c_usuario SET
		cl_puesto = #{job.jobId},
		nombre = #{name},
		ap_paterno = #{firstName},
		ap_materno = #{secondName},
		email =	#{email},
		password = #{password},
		cl_sucursal = #{office.officeId}
		WHERE cl_usuario = #{userId}
	</update>
	<delete id="deleteUser" parameterType="accountDTO">
		UPDATE c_usuario SET fg_activo = '0' WHERE cl_usuario = #{userId}
	</delete>
	
	<select id="getAccount" parameterType="java.lang.String" resultMap="accountResultMap">
		SELECT * FROM c_usuario WHERE email = #{email}
	</select>
	
	<select id="getAllJobs" resultMap="resultMapJobs">
		SELECT * FROM c_puesto WHERE fg_estatus = '1' ORDER BY ds_descripcion
	</select>
	
	<select id="getUserByFilter" parameterType="userFilter" resultMap="accountResultMap">
		SELECT u.*, p.cl_puesto AS puestoId, p.ds_descripcion AS descripcion_puesto,
		s.nombre AS nombre_sucursal
		FROM c_usuario u
		INNER JOIN c_puesto p ON (u.cl_puesto = p.cl_puesto)	
		INNER JOIN c_sucursal s ON (u.cl_sucursal = s.cl_sucursal)
		WHERE u.fg_activo = '1'
		<if test="nameFilter != null and nameFilter != '' ">
			AND u.nombre LIKE CONCAT('%',#{nameFilter},'%')
		</if>
		<if test="firstNameFilter != null and firstNameFilter != '' ">
			AND u.ap_paterno LIKE CONCAT('%',#{firstNameFilter},'%')
		</if>
		<if test="lastNameFilter != null and lastNameFilter != '' ">
			AND u.ap_materno LIKE CONCAT('%',#{lastNameFilter},'%')
		</if>
		<if test="emailFilter != null and emailFilter != '' ">
			AND u.email LIKE CONCAT('%',#{emailFilter},'%')
		</if>
		<if test="jobIdFilter != null and jobIdFilter != 0 ">
			AND u.cl_puesto = #{jobIdFilter}
		</if>
		<if test="officeIdFilter != null and officeIdFilter != 0 ">
			AND u.cl_sucursal = #{officeIdFilter}
		</if>		
		ORDER BY nombre
	</select>
	
	
</mapper>